# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      nctl:
        image: makesoftware/casper-nctl:latest
        options: --name nctl
        env:
          PREDEFINED_ACCOUNTS: 'true'
          MINIMUM_ROUND_EXPONENT: '12'
          MAXIMUM_ROUND_EXPONENT: '14'
          DEPLOY_DELAY: '30sec'
        ports:
          - 11101:11101
          - 14101:14101
          - 18101:18101
    steps:
      # Build the assets folder from the started NCTL docker image
      - name: Preparing NCTL assets on the started NCTL docker image
        run: |
          echo "Wait for NCTL"
          sleep 30s
          mkdir assets
          docker cp nctl:/home/casper/casper-node/utils/nctl/assets/net-1/chainspec assets
          docker cp nctl:/home/casper/casper-node/utils/nctl/assets/net-1/users assets
          mv assets/users assets/net-1
          mv assets/chainspec assets/net-1/chainspec          

      # Upload the NCTL assets to a project artifact
      - name: Upload NCTL assets to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nctl-accounts
          path: |
            assets/net-1/chainspec/accounts.toml
            assets/net-1/user-*

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

  publish-docs-reports:
    needs: build
    runs-on: ubuntu-latest

    services:
      nctl:
        image: makesoftware/casper-nctl:latest
        options: --name nctl
        env:
          PREDEFINED_ACCOUNTS: 'true'
          MINIMUM_ROUND_EXPONENT: '12'
          MAXIMUM_ROUND_EXPONENT: '14'
          DEPLOY_DELAY: '30sec'
        ports:
          - 11101:11101
          - 14101:14101
          - 18101:18101
    steps:
      # Build the assets folder from the started NCTL docker image
      - name: Preparing NCTL assets on the started NCTL docker image
        run: |
          echo "Wait for NCTL"
          sleep 30s
          mkdir assets
          docker cp nctl:/home/casper/casper-node/utils/nctl/assets/net-1/chainspec assets
          docker cp nctl:/home/casper/casper-node/utils/nctl/assets/net-1/users assets
          mv assets/users assets/net-1
          mv assets/chainspec assets/net-1/chainspec          

      # Upload the NCTL assets to a project artifact
      - name: Upload NCTL assets to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nctl-accounts
          path: |
            assets/net-1/chainspec/accounts.toml
            assets/net-1/user-*

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Export project version
        run: echo "PROJECT_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: Generate Javadoc
        run: ./gradlew clean javadoc

      - name: Run tests and generate reports
        run: ./gradlew test

      - name: Deploy tests results to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          clean: true
          folder: build/reports/tests
          target-folder: docs/latest/junit

      - name: Deploy jacoco report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          clean: true
          folder: build/reports/jacoco
          target-folder: docs/latest/jacoco

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          clean: true
          folder: build/docs/javadoc
          target-folder: docs/latest/javadoc

      - name: Deploy tests results to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          clean: true
          folder: build/reports/tests
          target-folder: docs/${{ env.PROJECT_VERSION }}/junit

      - name: Deploy jacoco report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          clean: true
          folder: build/reports/jacoco
          target-folder: docs/${{ env.PROJECT_VERSION }}/jacoco

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          branch: gh-pages
          clean: true
          folder: build/docs/javadoc
          target-folder: docs/${{ env.PROJECT_VERSION }}/javadoc
