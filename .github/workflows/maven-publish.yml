# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [maven-migration]
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
          server-id: ossrh
#          server-username: OSSRH_USERNAME
#          server-password: OSSRH_PASSWORD
          username: OSSRH_USERNAME
          password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_SECRET_KEY_PASSWORD
      - name: Import GPG Owner Trust
        run: echo ${{secrets.MAVEN_GPG_SECRET_KEY_PASSWORD}} | base64 --decode | gpg --import-ownertrust

      - name: Import GPG key
        run: echo ${{secrets.MAVEN_GPG_SECRET_KEY}} | base64 --decode | gpg --import --no-tty --batch --yes

      - name: Clean settings.xml
        run: rm -rf ~/.m2/settings.xml

      - name: Create settings.xml
        uses: s4u/maven-settings-action@v1
        with:
          servers: '[{"id": "ossrh", "username": "${{secrets.SONATYPE_USERNAME}}", "password": "${{secrets.SONATYPE_PASSWORD}}"}]'

      - name: Deploy a new version to central
        run: ./mvnw clean deploy -B -DskipTests -DskipExamples -Prelease -Dgpg.keyname=${{secrets.MAVEN_GPG_SECRET_KEY}} -Dgpg.passphrase=${{secrets.MAVEN_GPG_SECRET_KEY_PASSWORD}}