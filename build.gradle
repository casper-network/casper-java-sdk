plugins {
    id 'java-library'
    id 'maven-publish'
}

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    implementation 'com.rfksystems:blake2b:1.0.0'
    implementation 'commons-codec:commons-codec:1.5'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.2'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    implementation 'com.sshtools:maverick-synergy:3.0.0-RC8'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    testImplementation 'com.jayway.jsonpath:json-path-assert:2.4.0'
    testImplementation 'commons-io:commons-io:2.8.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/casper-network/casper-java-sdk")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.casper.sdk.controller.CasperSdk'
        )
    }
}

task casperJar(type: Jar) {
    archiveBaseName = 'casper-java-sdk'
    archiveVersion = '0.1.0'
    manifest {
        attributes 'Main-Class': 'com.casper.sdk.controller.CasperSdk'
    }
    from { configurations.compileClasspath.findAll { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}
