plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    implementation 'com.rfksystems:blake2b:1.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    implementation 'org.bouncycastle:bcpkix-jdk14:1.69'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.5'
    implementation 'commons-codec:commons-codec:1.13'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.tuweni:bytes:1.3.0'
    implementation 'com.google.guava:guava:30.1.1-jre'
    runtimeOnly 'com.sshtools:maverick-synergy:3.0.0-RC8'
    testImplementation 'org.apache.maven.surefire:surefire-booter:2.22.2'
    testImplementation 'org.apache.maven.plugins:maven-surefire-plugin:2.22.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'com.jayway.jsonpath:json-path:2.6.0'
    testImplementation 'com.jayway.jsonpath:json-path-assert:2.6.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.1'
}

group = 'network.casper'
version = '0.3.11'
description = 'Casper Java SDK'
java.sourceCompatibility = JavaVersion.VERSION_1_8

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


publishing {
    repositories {
        maven {
            name = 'OSSRH'
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv('MAVEN_USERNAME')
                password = System.getenv('MAVEN_PASSWORD')
            }
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/casper-network/casper-java-sdk"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'casper-java-sdk'
            from components.java
            pom {
                name = 'Casper Java SDK'
                packaging = 'jar'
                description = 'Java 8 SDK library for interacting with a CSPR node.'
                url = 'https://github.com/casper-network/casper-java-sdk'

                scm {
                    connection = 'scm:git:https://github.com/casper-network/casper-java-sdk.git'
                    developerConnection = 'git@github.com:casper-network/casper-java-sdk.git'
                    url = 'https://github.com/casper-network/casper-java-sdk'
                }

                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/casper-network/casper-java-sdk/issues'
                }

                ciManagement {
                    system = 'Github Actions'
                    url = 'https://github.com/casper-network/casper-java-sdk/actions'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'stormeye2000'
                        name = 'Carl Norburn'
                        email = 'carl@stormeye.co.uk'
                    }
                    developer {
                        id = 'meywood'
                        name = 'Ian Mills'
                        email = 'ian@meywood.com'
                    }
                }
            }
        }
    }

    jar {
        archiveClassifier = ''
    }

    // Reference at https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys
    signing {
        def signingKey = System.getenv('GPG_SIGNING_KEY') ?: findProperty('GPG_SIGNING_KEY')
        def signingKeyPassword = System.getenv('GPG_SIGNING_KEY_PASSWORD') ?: findProperty('GPG_SIGNING_KEY_PASSWORD')

        useInMemoryPgpKeys(signingKey, signingKeyPassword)
        sign publishing.publications.mavenJava
    }
}
